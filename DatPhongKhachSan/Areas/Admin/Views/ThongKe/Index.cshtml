
@{
    ViewBag.Title = "Thống Kê";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


<div class="alert alert-success"><b>Tổng doanh thu của tháng @DateTime.Now.Month / @DateTime.Now.Year là  @ViewBag.tien_ht VND</b></div>
<div class="card mb-3">

    <div class="container">
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-md-3">
                    <label for="date_start">Từ ngày</label>
                    @Html.TextBox("start", null, new { @type = "date", @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label for="date_end">Tới ngày</label>
                    @Html.TextBox("end", null, new { @type = "date", @class = "form-control" })
                </div>
                <div class="col-md-2">
                    <label for="date_end" style="visibility:hidden">End Date</label>
                    <input type="submit" onclick="return checkday()" class="btn btn-primary btn-block" value="Thống kê">
                </div>
            </div>
        }
        <hr />
    </div>
    <div class="card-body">
        <canvas id="myAreaChart" height="70"></canvas>
    </div>

    <div class="card-footer small text-muted">Updated yesterday at @DateTime.Now</div>
</div>







<script src="~/Content/Admin/vendor/chart.js/Chart.min.js"></script>
@{
    List<String> name = (List<String>)ViewBag.name;
    List<int> total = (List<int>)ViewBag.total;
    List<int> C2sl = (List<int>)ViewBag.C2sl;
    List<String> C2name = (List<String>)ViewBag.C2name;
    List<Double> C1sl = (List<Double>)ViewBag.C1sl;
    List<String> C1name = (List<String>)ViewBag.C1name;

    double C1max = 0;
    for (int i = 0; i < C1sl.Count; i++)
    {
        if (C1sl[i] > C1max)
        {
            C1max = C1sl[i];
        }
    }
    int max = 0;
    for (int i = 0; i < C2sl.Count; i++)
    {
        if (C2sl[i] > max)
        {
            max = C2sl[i];
        }
    }
    <script>
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
        function getListColor(i) {
            var li = [];
            for (var j = 0; j < i; j++) {
                li.push(getRandomColor());
            }
            return li;
        }
    </script>
    <script>
                Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
                Chart.defaults.global.defaultFontColor = '#292b2c';

                var ctx = document.getElementById("myAreaChart");
                var myLineChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Encode(C1name)),
                        datasets: [{
                            label: "Doanh thu",
                            lineTension: 0.3,
                            backgroundColor: "rgba(2,117,216,0.2)",
                            borderColor: "rgba(2,117,216,1)",
                            pointRadius: 5,
                            pointBackgroundColor: "rgba(2,117,216,1)",
                            pointBorderColor: "rgba(255,255,255,0.8)",
                            pointHoverRadius: 5,
                            pointHoverBackgroundColor: "rgba(2,117,216,1)",
                            pointHitRadius: 20,
                            pointBorderWidth: 2,
                            data: @Json.Encode(C1sl),
                        }],
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'date'
                                },
                                gridLines: {
                                    display: false
                                },
                                ticks: {
                                    maxTicksLimit: 7
                                }
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: @Math.Ceiling(C1max*1.2),
                                    maxTicksLimit: 5
                                },
                                gridLines: {
                                    color: "rgba(0, 0, 0, .125)",
                                }
                            }],
                        },
                        legend: {
                            display: false
                        }
                    }
                });


        var ctx = document.getElementById("myBarChart");
                var myLineChart = new Chart(ctx, {
            type: 'bar',
            data: {
                    labels: @Html.Raw(Json.Encode(C2name)),
                datasets: [{
                        label: "Số lượng",
                    backgroundColor: "rgba(2,117,216,1)",
                    borderColor: "rgba(2,117,216,1)",
                    data: @Json.Encode(C2sl),
                }],
            },
            options: {
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'month'
                            },
                        gridLines: {
                                display: false
                        },
                        ticks: {
                                maxTicksLimit: 7
                        }
                        }],
                    yAxes: [{
                            ticks: {
                                min: 0,
                            max: @Math.Ceiling(max*1.2),
                            maxTicksLimit: 6
                            },
                        gridLines: {
                                display: true
                        }
                        }],
                },
                legend: {
                        display: false
                }
                }
            });





        var ctx = document.getElementById("myPieChart");

            var myPieChart = new Chart(ctx, {

            type: 'pie',
            data: {


                datasets: [{
                data: @Json.Encode(total),
                    backgroundColor: colors,
            }],
        },
    });
    </script>
}